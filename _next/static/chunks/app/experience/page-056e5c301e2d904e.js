(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[127],{806:(e,t,a)=>{"use strict";a.d(t,{A:()=>c});var i=a(5155);a(2115);var n=a(532),o=a(8358),s=a(5358),r=a(158),l=a(912),d=a(821);let c=e=>{var t;let{title:a,company:c,dates:m,description:h,index:u,nestLevel:p,isExpanded:g,onExpandChange:f}=e;return t=p%2==0?u%2==0?"primary.light":"primary.dark":u%2==0?"secondary.light":"secondary.dark",(0,i.jsxs)(n.A,{sx:{backgroundColor:t},expanded:g,onChange:()=>f(!g),children:[(0,i.jsx)(o.A,{expandIcon:(0,i.jsx)(d.A,{}),children:(0,i.jsx)(s.default,{children:a})}),(0,i.jsx)(r.default,{}),(0,i.jsxs)(l.A,{children:[(0,i.jsxs)("div",{style:{display:"flex",flexDirection:"row",justifyContent:"space-between",paddingBottom:"0.5rem"},children:[(0,i.jsx)(s.default,{children:c}),(0,i.jsx)(s.default,{children:m})]}),(0,i.jsx)(s.default,{sx:{whiteSpace:"pre-line"},children:h})]})]})}},2832:(e,t,a)=>{"use strict";a.d(t,{O:()=>i,b:()=>n});let i=[{title:"Vision-Based Drone Navigation",description:"Working with another student in my class, we made a program that will serve as a core utility in the autonomous navigation of a drone. The program takes a downward-looking image from the drone and applies a number of filtering and matching techniques in order to determine where the drone's image matches with onboard satellite imagery. The matching location in the satellite image can be used to extract approximate coordinates for the drone in real time. Because the satellite imagery can be stored on the drone, the drone gains a large amount of autonomous abilities. After pairing with other positioning techniques (like IMU integration), I expect a drone flying a few hundred feet in the air should be able to complete waypoint missions without reliance on GNSS.",githubLink:"https://gitlab.com/tylrhnry/drone-nav",course:"CS 4700 Machine Learning",featured:!0},{title:"GPS Spoofing Detection",description:"I wrote a Rust program that, when coupled with common drone hardware (GPS and IMU), can work to detect artificial GPS signals meant to attack the drone. The program performs an integration on the accelerometer and gyroscope readings to estimate its relative position since the last verified location. If the new location is within the margin of error of the received GPS readings, we assume the drone is still receiving accurate GPS data. If the drone starts receiving GPS data that suggests it has been moving contrary to what the IMU has measured, we assume the GPS data is inaccurate. When validation is frequently performed, the sensor error can be continuously removed, leading to more accurate detection of adversarial signals.",githubLink:"https://github.com/tylrhnry/gps_spoofing_detection",course:"339R (Advanced Programming Language (Rust))",featured:!0},{title:"Missile Defense System",description:"This missile defense simulator was created from scratch to teach the Rust programming language to dozens of interns and professional C++ developers at the Air Force. This program simulates and visualizes enemy and interceptor missiles. The enemy missile can be given a non-linear path to complicate targeting from the interceptor. Currently, the path prediction is rudimentary, and I would like to add spline regression and a binary search on the predicted path to allow for quicker interception and realistic range limits.",githubLink:"https://github.com/tylrhnry/missile_defense_sim",course:"Personal",featured:!0},{title:"Compiler",description:"Written in Rust, this compiler was written from scratch to do the lexing, parsing, semantic analysis, and assembly code generation of a language with the most common features of the C++ programming language. The assembly code generated targets the assembler I wrote as part of the precursor class, which then assembles the code into byte code that runs on a virtual machine I programmed in C++.",githubLink:"N/A",course:"4490 (Compiler Construction)",featured:!0},{title:"Home Server",description:'Meant as a file server and backup, as well as a platform to self-host a number of other services, this computer has a large reliability requirement. As such, the hardware has substantial power for the programs it will run, including a 32-thread CPU, error-correcting ECC memory, and large hard drives in a ZFS mirror to provide filesystem-based error correction and account for potential hard drive failures.\n    The software shares a declarative Nix configuration with my other computers to persist my updates and configuration settings across all my machines, making development extremely consistent. \n    The declarative approach is a dream to work with. Any update or progress I make on any machine can seamlessly be applied to all of my systems, completely removing repetitive configuration, which when setting up and working with many systems, is a huge deal. Backups are extremely simple. Software development and builds are managed the same way, removing the "It works on my machine" problem, and is a consistent tool across languages.',githubLink:"",course:"",featured:!1},{title:"Endurance VTOL Drone",description:"This plane is still in the early stages of development. I am currently converting my paper designs to CAD models in FreeCAD and assembling the components I have built. The primary purpose of the drone is visual and radio surveillance. I'm taking a very math-focused approach to the design and component selection, which has taught me quite a bit more than my prior drone builds that are less optimised or built with generic components. I'm attempting to maximize endurance on a platform that is compact when disassembled and modular in the motor and payload configurations.\n    The plane is being designed to allow vertical takeoff and landing. The primary configuration with have a 2-meter wingspan and should have a total wet weight of 6-8kg depending on payload.\n    ",githubLink:"",course:"",featured:!1},{title:"This Website",description:"This website is written in Typescript, using React and NextJS. It is hosted by my home server and Github Pages for redundancy. The development and build environment is kept reproducible using Nix.",githubLink:"https://github.com/tylrhnry/tylrhnry.github.io",course:"",featured:!1},{title:"Assembler",description:"Written in Python, this assembler targets the virtual machine I wrote in C++ and converts assembly code into bytecode. It does error checking of the assembly code, implements a traditional stack and heap memory model. Example programs demonstrate the use of stack frames, recursion, heap memory management.",githubLink:"N/A",course:"4380 (Advanced Computer Architecture and Assembly)",featured:!1},{title:"Virtual Machine",description:'I wrote a program in C++ that can read byte code (binary data) and execute it as if it is the hardware of a machine. This virtual machine implemented three different caching types that are implemented "in hardware" and abstracted from the assembly programmer. Cmake and Google testing framework were used for building and testing.',githubLink:"N/A",course:"4380 (Advanced Computer Architecture and Assembly)",featured:!1},{title:"Rust-C++ binding",description:"Rust is often a great language to use in scenarios where C and C++ are appropriate, however, complete rewrites are frequently unwise. Implementing new code or replacing small sections, however, might be found to be desirable. Luckily, Rust incorporates with C/C++ very nicely. This project implements a simple linear algebra library and performs cross-language compilation and function calls. The ability to depend on the great legacy and support of C, as well as incorporating the strong behavioral guarantees of Rust is an incredibly useful tool for embedded development.",githubLink:"N/A",course:"339R (Advanced Programming Language (Rust))",featured:!0}],n=i.filter(e=>e.featured)},2847:(e,t,a)=>{"use strict";a.d(t,{default:()=>p});var i=a(5155),n=a(2115),o=a(2693),s=a(2269),r=a(2861),l=a(2966),d=a(4146),c=a(2422),m=a(5358),h=a(9608);let u=[{id:12,src:"/images/12.jpg",alt:"LoRa Modulation",description:"This is an FFT waterfall display of the transmissions from one of my radios that uses LoRa modulation. The frequency chirps draw a line across the frequency spectrum in a relatively slow manner as to allow very distant communication with very limited power. These radios have been very convenient when in places without reliable cell-service as a way to share our location, send messages, or even integrate with the mapping app, ATAK, to share pins, routes, and data and have them update in real-time with an entire party. Because of the low power and frequency spectrum they utilize, you can create separate encryption channels to ensure your messages and data can only be read by those with whom you intend."},{id:18,src:"/images/18.jpg",alt:"Soldering Radio Components",description:"This was during the first assembly steps of my HF transceiver. Installing the first resistors would be the beginning of a many hour assembly process, involving winding toroids and testing hundreds of connections. It was a great little project with some real utility. More assembled versions can be seen in a few other pictures on this site."},{id:9,src:"/images/9.jpg",alt:"Air Force Trainings",description:"As a part of my job with the Air Force, I was able to work on a time-tested system. The F-16 is a workhorse of a system, and the radar is quite impressive for a technological system that is close to 40 years old. Aside from my work on the radar, I was also able to participate in a couple of other projects and many other trainings to help gain a comprehensive understanding of how the different subsystems integrate and operate together to support the aircraft's role."},{id:13,src:"/images/13.jpg",alt:"Training VS Accuracy in Machine Learning",description:"Description for project 13."},{id:8,src:"/images/8.jpg",alt:"Assembled HF Radio",description:"Assembled, tested, waterproofed, and with a tuned EFHW antenna, this little radio might be the smallest HF transceivers capable of digital modes and voice communication. After receiving clear audio and many data packets from thousands of miles away, I'm extremely satisfied with the build and the performance. I still need to make a compact microphone to allow me to transmit voice, but I'm already testing my digital mode capabilities with a family member to see if we can make targeted contacts from hundreds of miles away with no intermediary infrastructure."},{id:7,src:"/images/7.jpg",alt:"Home Server",description:"This computer acts as both my desktop computer and a server. I have been using Nixos for quite some time and have found it to be an incredibly useful tool for building software. Nixos is used to build my entire system's software on all of my machines, down to the disk partitioning and up to user's package configuration. It would take a bit of time to go into detail on the entire system, but this computer is allowing me to self-host a number of useful services, as well as be a strong machine to do my development on and to host and back up important data. I'm planning on creating an offsite backup that syncs with this one so that I can reliably store many terabytes of media, photos & video, and documents for myself, family, and friends in a secure manner."},{id:10,src:"/images/10.jpg",alt:"Meshtastic Radio",description:"This is an example of one of my Meshtastic radios. This one was specifically made to be as compact as possible while still containing a GPS module and a low-power-consumption e-ink screen. I clearly need to add a 3D printed case, but the size made it useful to bring anywhere and allow GPS tracking and location sharing with family or friends if we plan on getting separated during a hike or road trip."},{id:14,src:"/images/14.jpg",alt:"Compiler",description:"For my capstone project, I wrote a language compiler that converts source code to assembly code. An assembler and virtual machine that I wrote in a precursor class then converts the assembly code into machine code and then executes the source code. This image shows an example of the source code and the resulting assembly code that the compiler generated. This project gave me a much better understanding of the fundamental application that state machines have to computing. The theory that was learned and lightly practiced in other courses was applied heavily here, and it added an important key to completing my understanding of how the code I write finally makes it to hardware. I still have a passion for having a comprehensive understanding of the tools I work with, and enjoy working in domains where I can see the execution and performance that comes from the high-level languages we tend to work with."}];function p(){let[e,t]=(0,n.useState)(!1),[a,p]=(0,n.useState)(null),g=e=>{p(e),t(!0)},f=()=>{t(!1),p(null)};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.default,{sx:{paddingBottom:"0.5rem"},children:(0,i.jsx)(s.default,{sx:{display:"grid",gridTemplateColumns:{xs:"1fr",md:"1fr 1fr"},gap:2,maxHeight:{md:800},overflowY:"auto",paddingY:1,padding:{xs:"0.5rem",md:"0"},paddingTop:{xs:"2rem",md:"2rem"}},children:u.map(e=>(0,i.jsx)(s.default,{component:"img",src:e.src,alt:e.alt,onClick:()=>g(e),sx:{height:250,width:"100%",objectFit:"cover",borderRadius:2,boxShadow:2,cursor:"pointer"}},e.id))})}),(0,i.jsxs)(r.A,{open:e,onClose:f,maxWidth:"md",fullWidth:!0,children:[(0,i.jsxs)(l.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[null==a?void 0:a.alt,(0,i.jsx)(d.A,{onClick:f,children:(0,i.jsx)(h.A,{})})]}),(0,i.jsxs)(c.A,{children:[(0,i.jsx)(s.default,{component:"img",src:null==a?void 0:a.src,alt:null==a?void 0:a.alt,sx:{width:"100%",maxHeight:500,objectFit:"contain",borderRadius:2}}),(0,i.jsx)(m.default,{variant:"body1",mt:2,children:null==a?void 0:a.description})]})]})]})}},5899:(e,t,a)=>{"use strict";a.d(t,{default:()=>c});var i=a(5155),n=a(2115),o=a(2269),s=a(2693),r=a(5358),l=a(806),d=a(6823);let c=()=>{let[e,t]=(0,n.useState)(null),a=(e,a)=>{t(a?e:null)};return(0,i.jsx)(o.default,{sx:{flexGrow:1,display:"flex",flexDirection:"column",justifyContent:"top",alignItems:"center"},children:(0,i.jsxs)(s.default,{sx:{paddingTop:{xs:"1rem",md:"0"}},children:[(0,i.jsx)(r.default,{variant:"h5",children:"Work History"}),d.w.map((t,n)=>(0,i.jsx)(l.A,{title:t.title,company:t.company,dates:t.dates,description:t.description,index:n,nestLevel:0,isExpanded:n===e,onExpandChange:e=>a(n,e)},n))]})})}},6823:(e,t,a)=>{"use strict";a.d(t,{Z:()=>n,w:()=>i});let i=[{title:"F-16 Radar Software Engineer",company:"Air Force",dates:"Dec. 2024 - Present",description:"* Working on a large-scale, real-time, safety-critical system to support ongoing updates, additions, and fixes.\n\n      * Developed a program to remove the team's dependency on multiple operating systems, custom tools, and an out-of-date version control system to well-supported, flexible software. \n    ",featured:!0},{title:"Radar Researcher",company:"Air Force",dates:"Apr. 2024 - Dec. 2024",description:"* Led the development of a drone-mounted Ground Penetrating Radar (GPR) system, integrating a Software Defined Radio (SDR) and custom signal processing algorithms, which achieved an 80x reduction in system cost compared to existing methods.\n\n      * Served as the primary software developer for a GPR system project, contributing to a Master’s Degree research project focused on innovative explosive device detection.\n\n      * Developed and integrated software for seamless communication between ground station and drone-mounted systems, enabling real-time exchange of commands and signal data.\n    ",featured:!0},{title:"Full-Stack Developer",company:"Air Force",dates:"Jul. 2023 - Apr. 2024",description:"* Developed a website with the PERN stack to host trainings, information, and forms that were previously done on paper, saving administrators 15 hours a week.\n\n      * Added complex site features to allow employees and operators to submit, maintain, and fulfill project-critical 3D print requests.\n    ",featured:!0},{title:"Engineering Intern",company:"Blendtec Inc.",dates:"Jan. 2021 - Apr. 2023",description:"* Designed and tested new assembly aids and tools using SolidWorks and microcontrollers to update and revise assembly processes.\n\n      * Planned, formulated, and oversaw the fabrication of updated assembly lines, doubling the output potential of production teams.\n    ",featured:!0},{title:"Student Engineer",company:"Bull Frog Spas",dates:"Jun. 2021 - Aug. 2021",description:"* Led the design and initial implementation of a software interface that dynamically displayed assembly processes for 17 products with hundreds of configurations.\n\n      * Designed the structure of a digital tracking system for dozens of products, collaborating with software developers and production teams to accurately define and meet system requirements.\n    ",featured:!0}],n=i.filter(e=>e.featured)},8513:(e,t,a)=>{"use strict";a.d(t,{default:()=>c});var i=a(5155),n=a(2115),o=a(2269),s=a(2693),r=a(5358),l=a(8526),d=a(2832);let c=()=>{let[e,t]=(0,n.useState)(null),a=(e,a)=>{t(a?e:null)};return(0,i.jsx)(o.default,{sx:{flexGrow:1,display:"flex",flexDirection:"column",justifyContent:"top",alignItems:"center"},children:(0,i.jsxs)(s.default,{children:[(0,i.jsx)(r.default,{variant:"h5",children:"Projects"}),d.O.map((t,n)=>(0,i.jsx)(l.A,{title:t.title,description:t.description,githubLink:t.githubLink,index:n,nestLevel:0,isExpanded:n===e,onExpandChange:e=>a(n,e)},n))]})})}},8526:(e,t,a)=>{"use strict";a.d(t,{A:()=>u});var i=a(5155);a(2115);var n=a(532),o=a(8358),s=a(5358),r=a(158),l=a(912),d=a(2269),c=a(7764),m=a(5857),h=a(821);let u=e=>{var t;let{title:a,description:u,githubLink:p,index:g,nestLevel:f,isExpanded:y,onExpandChange:b}=e;return t=f%2==0?g%2==0?"primary.light":"primary.dark":g%2==0?"secondary.light":"secondary.dark",(0,i.jsxs)(n.A,{sx:{backgroundColor:t},expanded:y,onChange:()=>b(!y),children:[(0,i.jsx)(o.A,{expandIcon:(0,i.jsx)(h.A,{}),children:(0,i.jsx)(s.default,{children:a})}),(0,i.jsx)(r.default,{}),(0,i.jsxs)(l.A,{children:[(0,i.jsx)(s.default,{sx:{whiteSpace:"pre-line"},children:u}),(0,i.jsx)(d.default,{sx:{display:"flex",justifyContent:"center"},children:"N/A"===p||""===p?"N/A"===p&&(0,i.jsx)(s.default,{sx:{display:"flex",flexDirection:"column",alignItems:"center",textAlign:"center",marginTop:"0.6rem",padding:"0 0.5rem 0.3rem 0.5rem",borderRadius:"0.2rem",border:"1px solid black",width:"fit-content"},children:"Due to plagiarism concerns, I cannot publicly link this project."}):(0,i.jsx)(c.A,{href:p,target:"_blank",rel:"noopener noreferrer",sx:{display:"flex",flexDirection:"column",alignItems:"center",paddingTop:"1rem",textDecoration:"none"},children:(0,i.jsx)(m.A,{variant:"contained",sx:{backgroundColor:"secondary.main","&:hover":{backgroundColor:"primary.main"},display:"flex",alignItems:"center"},children:"View on GitHub/GitLab"})})})]})]})}},9043:(e,t,a)=>{"use strict";a.d(t,{default:()=>g});var i=a(5155),n=a(2115),o=a(2693),s=a(2269),r=a(514),l=a(2861),d=a(2966),c=a(4146),m=a(2422),h=a(5358),u=a(9608);let p=[{name:"c++",image:"/images/c++_logo.png",description:"The majority of my programming has been with C++ and C. After having a thorough understanding of assembly programming, I really enjoy the straightforward and pure feel of the programming language. The performance and legacy of the language also largely contribute to it being in sharp competition for my favorite programming language."},{name:"rust",image:"/images/rust_logo.png",description:"With a similar application to C, Rust competes for the slot of best performing general-purpose programming languages. One of my favorite aspects of the language is the strong type system. That, paired with the memory safety, leads to a language that allows immense behavioral guarantees. Even though there is some friction with Rust, a lot of software development lessons have been learned over the decades and applied to Rust, which makes the development experience very enjoyable."},{name:"nix",image:"/images/nix_logo.png",description:"Nix is essentially a software build tool. It uses a purely functional language to describe the resulting software and Nix builds it according to the configuration. The language it uses to do the configuration is called the Nix language and a package manager has been built from this build tool called the Nix package manager. NixOS is a Linux distribution that uses the Nix package manager (though the Nix package manager can be installed on any Unix system). So the naming can be a little confusing, but the tool is incredibly useful. Aside from just configuring your system's software, you can also use Nix for general software development. It can be used to configure your development environments for basically any language and integrated into the building of your software project. The declarative nature results in complete reproducibility, ensuring a consistent and reliable development and deployment."},{name:"postgres",image:"/images/postgres_logo.png",description:"With an in-depth databases course and my experience working on a dynamic website, I have a fair bit of SQL experience, both Postgres and MySQL. While I don’t use it extensively day to day, I retain a strong understanding of relational database concepts."},{name:"react",image:"/images/react_logo.png",description:"This website is built with TypeScript, React, and MUI. TypeScript allows for static typing and better tooling, MUI provides a fast and accessible component library, and React enables dynamic, component-based UI development. After doing some pure HTML, CSS, and Javascript, I enjoyed the flexible and capable tools that this site is built with. Because of my experience and enjoyment with Rust, I'm also curious to try WebAssembly."},{name:"solidworks",image:"/images/solidworks_logo.png",description:"I have certifications and several years experience with CAD in SolidWorks. It is an extremely powerful design tool and I've enjoyed using for many personal projects. I've used the concepts I've learned and started to apply them to projects in FreeCAD. I enjoy contributing to and using open-source software, and I also enjoy not booting into my Windows operating system where Microsoft generously removed the function of my physical keyboard with no way of installing drivers or reverting updates to fix it. Though FreeCAD is not as refined as SolidWorks, it is very impressive and useful. I am especially happy to know that, unlike SolidWorks, I don't rely on a license to open the app and view my previous designs. My designs will also be able to be used by anyone on basically any operating system."},{name:"linux",image:"/images/linux_logo.png",description:"The operating system that runs the world, Linux is an incredibly powerful and flexible operating system. I've been using it for years and have learned how much easier it makes most things. Especially software-related things. Granted, I'm not a gamer or reliant on any Windows-only software, but for someone who enjoys control and customization of my things, Linux is a wonderful tool."},{name:"python",image:"/images/python_logo.png",description:"Though I think Python's core strength is its simple syntax, this has led to a large user base, extensive support, and many useful libraries. I've used it quite extensively and find it helpful for a wide range of applications. While it may not seem as 'cool,' its popularity gives it a lot of relevance."}];function g(){let[e,t]=(0,n.useState)(!1),[a,g]=(0,n.useState)(null),f=e=>{g(e),t(!0)},y=()=>{t(!1),g(null)};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.default,{maxWidth:"xl",sx:{marginBottom:"1rem"},children:(0,i.jsx)(s.default,{sx:{display:"grid",gridTemplateColumns:{xs:"repeat(4, 1fr)",md:"repeat(8, 1fr)"},gap:2,justifyItems:"center",alignItems:"center",width:"100%",paddingTop:"2rem"},children:p.map(e=>(0,i.jsx)(r.default,{title:e.name.charAt(0).toUpperCase()+e.name.slice(1),arrow:!0,children:(0,i.jsx)(s.default,{component:"img",src:e.image,alt:"".concat(e.name," logo"),onClick:()=>f(e),sx:{height:40,width:"auto",cursor:"pointer"}})},e.name))})}),(0,i.jsxs)(l.A,{open:e,onClose:y,maxWidth:"sm",fullWidth:!0,children:[(0,i.jsxs)(d.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[null==a?void 0:a.name.toUpperCase(),(0,i.jsx)(c.A,{onClick:y,children:(0,i.jsx)(u.A,{})})]}),(0,i.jsxs)(m.A,{children:[(0,i.jsx)(s.default,{component:"img",src:null==a?void 0:a.image,alt:null==a?void 0:a.name,sx:{width:"100%",maxHeight:300,objectFit:"contain",borderRadius:1}}),(0,i.jsx)(h.default,{variant:"body1",mt:2,children:null==a?void 0:a.description})]})]})]})}},9310:(e,t,a)=>{Promise.resolve().then(a.bind(a,2269)),Promise.resolve().then(a.bind(a,2693)),Promise.resolve().then(a.bind(a,514)),Promise.resolve().then(a.bind(a,5358)),Promise.resolve().then(a.bind(a,9043)),Promise.resolve().then(a.bind(a,2847)),Promise.resolve().then(a.bind(a,8513)),Promise.resolve().then(a.bind(a,5899))}},e=>{var t=t=>e(e.s=t);e.O(0,[407,530,473,250,514,441,684,358],()=>t(9310)),_N_E=e.O()}]);